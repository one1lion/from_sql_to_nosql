@page "/"

@inject HttpClient Http
 
<h1>Trackless Product Tracker</h1>

<p>
  The tracker for tracking trackless products.
  Below are a list of Tickets entered for these
  so-called trackless products.
</p>

<table class="table table-striped table-bordered">
  <thead>
    <tr>
      <td colspan="@(hasTickets ? "6" : "5")">
        <NavLink class="btn btn-primary" href="track">Add New Ticket</NavLink>
      </td>
    </tr>
    <tr>
      <th>Qr Code Id</th>
      <th>Product Category</th>
      <th>Product Name</th>
      <th>Formulation Description Type</th>
      <th>Tech Name</th>
      @if (hasTickets) {
        <th>&nbsp;</th>
      }
    </tr>
  </thead>
  <tbody>
    @if (tickets is null) {
      <tr>
        <td colspan="5">Loading, Please Wait...</td>
      </tr>
    } else if (tickets.Count == 0) {
      <tr>
        <td colspan="5">No tickets entered</td>
      </tr>
    } else {
      foreach(var curTicket in tickets) {
        <tr>
          <td style="vertical-align: middle;">@curTicket.QrCodeGuid</td>
          <td style="vertical-align: middle;">@((MarkupString)(string.IsNullOrWhiteSpace(curTicket.ItemCategoryName) ? "<em>Not Selected</em>" : curTicket.ItemCategoryName))</td>
          <td style="vertical-align: middle;">@curTicket.ProductName</td>
          <td style="vertical-align: middle;">@curTicket.FormulationDescriptionType</td>
          <td style="vertical-align: middle;">@curTicket.TechName</td>
          <td style="vertical-align: middle;"><NavLink class="btn btn-sm btn-link" href="@($"track/{curTicket.QrCodeGuid}")">View</NavLink> </td>
        </tr>
      }
    }
  </tbody>
</table>

@code {
  List<TrackingTicketViewModel> tickets;
  bool hasTickets => (tickets?.Count ?? 0) > 0;

  protected override async Task OnInitializedAsync() {
    tickets = await Http.GetFromJsonAsync<List<TrackingTicketViewModel>>("api/tickets");
  }
}